<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.treasuryfan.demo.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.treasuryfan.demo.model.pojo.Blog">
    <id column="blogid" jdbcType="BIGINT" property="blogid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="userid" jdbcType="BIGINT" property="userid" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="comment_num" jdbcType="BIGINT" property="commentNum" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.treasuryfan.demo.model.pojo.Blog">
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    blogid, title, userid, create_date, comment_num
  </sql>
  <sql id="Blob_Column_List">
    summary, content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.treasuryfan.demo.model.pojo.BlogExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.treasuryfan.demo.model.pojo.BlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_blog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_blog
    where blogid = #{blogid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_blog
    where blogid = #{blogid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.treasuryfan.demo.model.pojo.Blog">
    insert into t_blog (blogid, title, userid, 
      create_date, comment_num, summary, 
      content)
    values (#{blogid,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{commentNum,jdbcType=BIGINT}, #{summary,jdbcType=LONGVARCHAR}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.treasuryfan.demo.model.pojo.Blog">
    insert into t_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogid != null">
        blogid,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="commentNum != null">
        comment_num,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogid != null">
        #{blogid,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentNum != null">
        #{commentNum,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    update t_blog
    <set>
      <if test="record.blogid != null">
        blogid = #{record.blogid,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentNum != null">
        comment_num = #{record.commentNum,jdbcType=BIGINT},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_blog
    set blogid = #{record.blogid,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      comment_num = #{record.commentNum,jdbcType=BIGINT},
      summary = #{record.summary,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_blog
    set blogid = #{record.blogid,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      comment_num = #{record.commentNum,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.treasuryfan.demo.model.pojo.Blog">
    update t_blog
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=BIGINT},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="commentNum != null">
        comment_num = #{commentNum,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blogid = #{blogid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.treasuryfan.demo.model.pojo.Blog">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      comment_num = #{commentNum,jdbcType=BIGINT},
      summary = #{summary,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where blogid = #{blogid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.treasuryfan.demo.model.pojo.Blog">
    update t_blog
    set title = #{title,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      comment_num = #{commentNum,jdbcType=BIGINT}
    where blogid = #{blogid,jdbcType=BIGINT}
  </update>
</mapper>